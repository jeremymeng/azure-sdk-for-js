import { StorageClientContext } from "./generated/lib/storageClientContext";
import { Pipeline } from "./Pipeline";
import { escapeURLPath } from "./utils/utils.common";

/**
 * A StorageClient represents a based URL class for BlobServiceClient, ContainerClient and etc.
 *
 * @export
 * @class StorageClient
 */
// export abstract class StorageClient {
export class StorageClient {
  /**
   * Encoded URL string value.
   *
   * @type {string}
   * @memberof StorageClient
   */
  public readonly url: string;

  /**
   * Request policy pipeline.
   *
   * @internal
   * @type {Pipeline}
   * @memberof StorageClient
   */
  public readonly pipeline: Pipeline;

  /**
   * StorageClient is a reference to protocol layer operations entry, which is
   * generated by AutoRest generator.
   *
   * @protected
   * @type {StorageClient}
   * @memberof StorageClient
   */
  public readonly storageClientContext: StorageClientContext;

  /**
   * Creates an instance of StorageClient.
   * @param {string} url
   * @param {Pipeline} pipeline
   * @memberof StorageClient
   */
  constructor(url: string, pipeline: Pipeline) {
    // URL should be encoded and only once, protocol layer shouldn't encode URL again
    this.url = escapeURLPath(url);
    this.pipeline = pipeline;
    this.storageClientContext = new StorageClientContext(
      this.url,
      pipeline.toServiceClientOptions()
    );

    // Override protocol layer's default content-type
    const storageClientContext = this.storageClientContext as any;
    storageClientContext.requestContentType = undefined;
  }
}
